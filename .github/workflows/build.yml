---

name: Build Ansible Collection

env:
  package: lowell80.splunk

# Inspiration from:
#   https://github.com/imjoseangel/ansiblecommon/blob/devel/.github/workflows/release.yml
#   https://github.com/artis3n/ansible-collection-github/blob/master/.github/workflows/deploy.yml

# Controls when the workflow will run
on:
  push:
    tags:
      - "v*"

# Only run if the 'v*' tag has been created.  Unittest could be run in another workflow, once that's setup
#    branches:
#      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Get current version
        id: cversion
        run: echo "::set-output name=version::$(grep ^version galaxy.yml | awk -F'"' '{ print $2 }')"

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ansible
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build Ansible Collection
        run: ansible-galaxy collection build --force

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        if: contains(github.ref, 'tags/v')
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        id: upload-release-asset
        if: contains(github.ref, 'tags/v')
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.package}}-${{steps.cversion.outputs.version}}.tar.gz
          asset_name: ${{env.package}}-${{steps.cversion.outputs.version}}.tar.gz
          asset_content_type: application/tar+gzip

      - name: Deploy Ansible collection to Galaxy
        run: ansible-galaxy collection publish ${{env.package}}-${{ steps.cversion.outputs.version }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
        if: contains(github.ref, 'tags/v')
